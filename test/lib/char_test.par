module CharTest

import Test (group)

to_lower_test : Test
to_lower_test = group([
  // @example
  test assert Char.to_lower('a') == 'a'
  // @example
  test assert Char.to_lower('B') == 'b'
  // @example
  test assert Char.to_lower('.') == '.'
])

to_upper_test : Test
to_upper_test = group([
  // @example
  test assert Char.to_upper('a') == 'A'
  // @example
  test assert Char.to_upper('B') == 'B'
  // @example
  test assert Char.to_upper('3') == '3'
  test assert Char.to_upper('ß') == 'ß'
])

lower_test : Test
lower_test = group([
  // @example
  test assert Char.lower?('a')
  // @example
  test assert !Char.lower?('B')
  // @example
  test assert !Char.lower?(',')
  test assert !Char.lower?('ß')
])

upper_test : Test
upper_test = group([
  // @example
  test assert !Char.upper?('a')
  // @example
  test assert Char.upper?('B')
  // @example
  test assert !Char.upper?('[')
  test assert !Char.upper?('ß')
])

letter_test : Test
letter_test = group([
  // @example
  test assert Char.letter?('m')
  // @example
  test assert Char.letter?('X')

  List.seq(0, 25)
  |> map(|i| test assert Char.letter?(to_char($'a' + i)))
  |> group
  List.seq(0, 25)
  |> map(|i| test assert Char.letter?(to_char($'A' + i)))
  |> group

  // @example
  test assert !Char.letter?('7')
  // @example
  test assert !Char.letter?(')')
])

digit_test : Test
digit_test = group([
  // @example
  test assert Char.digit?('5')
  // @example
  test assert Char.digit?('0')

  List.seq(0, 9)
  |> map(|i| test assert Char.digit?(to_char($'0' + i)))
  |> group

  // @example
  test assert !Char.digit?('b')
  test assert !Char.digit?('M')
  // @example
  test assert !Char.digit?('"')
])

whitespace_test : Test
whitespace_test = group([
  // @example
  test assert Char.whitespace?('\t')
  // @example
  test assert Char.whitespace?('\n')
  test assert !Char.whitespace?('.')
  // @example
  test assert !Char.whitespace?('s')
  // @example
  test assert !Char.whitespace?('9')
])
